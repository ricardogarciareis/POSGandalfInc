// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.DAL;

namespace Projeto.DAL.Migrations
{
    [DbContext(typeof(GandalfContexto))]
    [Migration("20211126225514_RefactoringProjeto2")]
    partial class RefactoringProjeto2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto.DAL.Entidades.Artigo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CategoriaArtigoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetalheDeVendaId")
                        .HasColumnType("int");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroSerie")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenciaEAN")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaArtigoId");

                    b.HasIndex("DetalheDeVendaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("StockId");

                    b.ToTable("Artigos");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.CategoriaArtigo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasArtigos");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("MoradaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MoradaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("MoradaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MoradaId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Loja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("MoradaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NomeDoGerente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MoradaId");

                    b.ToTable("Lojas");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Morada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Distrito")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Moradas");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Utilizador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("Projeto.DAL.Faturacao.DetalheDeVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("DetalhesDeVenda");
                });

            modelBuilder.Entity("Projeto.DAL.Faturacao.PontoDeVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LojaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.ToTable("PontosDeVendas");
                });

            modelBuilder.Entity("Projeto.DAL.Faturacao.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Projeto.DAL.Faturacao.Venda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHoraVenda")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetalheVendaId")
                        .HasColumnType("int");

                    b.Property<bool>("Fechada")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroSerie")
                        .HasColumnType("int");

                    b.Property<Guid?>("PontoDeVendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPagamento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("VendedorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DetalheVendaId");

                    b.HasIndex("PontoDeVendaId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Artigo", b =>
                {
                    b.HasOne("Projeto.DAL.Entidades.CategoriaArtigo", "CategoriaArtigo")
                        .WithMany()
                        .HasForeignKey("CategoriaArtigoId");

                    b.HasOne("Projeto.DAL.Faturacao.DetalheDeVenda", null)
                        .WithMany("ListaDeArtigos")
                        .HasForeignKey("DetalheDeVendaId");

                    b.HasOne("Projeto.DAL.Entidades.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("Projeto.DAL.Faturacao.Stock", null)
                        .WithMany("ListaArtigosParaVenda")
                        .HasForeignKey("StockId");

                    b.Navigation("CategoriaArtigo");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Cliente", b =>
                {
                    b.HasOne("Projeto.DAL.Entidades.Morada", "Morada")
                        .WithMany()
                        .HasForeignKey("MoradaId");

                    b.Navigation("Morada");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Fornecedor", b =>
                {
                    b.HasOne("Projeto.DAL.Entidades.Morada", "Morada")
                        .WithMany()
                        .HasForeignKey("MoradaId");

                    b.Navigation("Morada");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Loja", b =>
                {
                    b.HasOne("Projeto.DAL.Entidades.Morada", "Morada")
                        .WithMany()
                        .HasForeignKey("MoradaId");

                    b.Navigation("Morada");
                });

            modelBuilder.Entity("Projeto.DAL.Faturacao.PontoDeVenda", b =>
                {
                    b.HasOne("Projeto.DAL.Entidades.Loja", "Loja")
                        .WithMany()
                        .HasForeignKey("LojaId");

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("Projeto.DAL.Faturacao.Venda", b =>
                {
                    b.HasOne("Projeto.DAL.Entidades.Cliente", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Projeto.DAL.Faturacao.DetalheDeVenda", "DetalheVenda")
                        .WithMany()
                        .HasForeignKey("DetalheVendaId");

                    b.HasOne("Projeto.DAL.Faturacao.PontoDeVenda", "PontoDeVenda")
                        .WithMany()
                        .HasForeignKey("PontoDeVendaId");

                    b.HasOne("Projeto.DAL.Entidades.Utilizador", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId");

                    b.Navigation("Cliente");

                    b.Navigation("DetalheVenda");

                    b.Navigation("PontoDeVenda");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Projeto.DAL.Entidades.Cliente", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Projeto.DAL.Faturacao.DetalheDeVenda", b =>
                {
                    b.Navigation("ListaDeArtigos");
                });

            modelBuilder.Entity("Projeto.DAL.Faturacao.Stock", b =>
                {
                    b.Navigation("ListaArtigosParaVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
